<%- include('partials/header', { title: 'Organiser Edit Event' }) %>

<div class="container mx-auto py-8">
  <h1 class="text-2xl font-bold mb-4">Edit Event #<%= event.id %></h1>

  <% if (errors.length) { %>
    <div class="mb-4 p-3 bg-red-100 text-red-800 rounded">
      <ul class="list-disc list-inside">
        <% errors.forEach(e=>{ %><li><%= e %></li><% }) %>
      </ul>
    </div>
  <% } %>

  <form action="/organiser/events/<%= event.id %>/edit" method="post" class="space-y-6">
    <!-- Event Details -->
    <fieldset class="border p-4 rounded space-y-4">
      <legend class="font-semibold">Event Details</legend>
      <label class="block">Title
        <input name="title" class="w-full border rounded px-3 py-2" value="<%= event.title %>">
      </label>
      <label class="block">Description
        <textarea name="description" class="w-full border rounded px-3 py-2"><%= event.description %></textarea>
      </label>
      <label class="block">Date
        <input name="event_date" type="date" class="border rounded px-3 py-2"
               value="<%= event.event_date?.split('T')[0]||'' %>">
      </label>
    </fieldset>

    <!-- Ticket Types -->
    <fieldset id="ticket-box" class="border p-4 rounded space-y-4">
      <legend class="font-semibold">Ticket Types</legend>
      <% tickets.forEach(t=>{ %>
        <div class="grid grid-cols-12 gap-2 ticket-row">
          <input class="col-span-4 border rounded px-2 py-1"
                 name="tickets[<%= t.type %>][type]" value="<%= t.type %>" placeholder="Type">
          <input class="col-span-3 border rounded px-2 py-1" type="number" min="0"
                 name="tickets[<%= t.type %>][quantity]" value="<%= t.quantity %>" placeholder="Qty">
          <input class="col-span-3 border rounded px-2 py-1" type="number" step="0.01" min="0"
                 name="tickets[<%= t.type %>][price]" value="<%= t.price %>" placeholder="Price">
          <button type="button" class="col-span-2 remove-btn text-red-600 text-sm">Remove</button>
        </div>
      <% }) %>
    </fieldset>

    <button id="add-ticket" type="button"
            class="px-3 py-1 bg-gray-200 rounded text-sm">+ Add ticket type</button>

    <div class="pt-4 space-x-4">
      <button class="px-4 py-2 bg-blue-600 text-white rounded">Submit Changes</button>
      <a href="/organiser" class="text-blue-600">← Back to Home</a>
    </div>
  </form>
</div>

<script>
// Add‐ticket and Remove‐ticket logic
document.getElementById('add-ticket').onclick = () => {
  const box = document.getElementById('ticket-box');
  const id  = Date.now();
  const row = document.createElement('div');
  row.className = 'grid grid-cols-12 gap-2 ticket-row';
  row.innerHTML = `
    <input class="col-span-4 border rounded px-2 py-1"
           name="tickets[${id}][type]" placeholder="Type">
    <input class="col-span-3 border rounded px-2 py-1" type="number" min="0"
           name="tickets[${id}][quantity]" placeholder="Qty">
    <input class="col-span-3 border rounded px-2 py-1" type="number" step="0.01" min="0"
           name="tickets[${id}][price]" placeholder="Price">
    <button type="button" class="col-span-2 remove-btn text-red-600 text-sm">Remove</button>
  `;
  box.appendChild(row);
};

document.addEventListener('click', e => {
  if (e.target.matches('.remove-btn')) {
    e.target.closest('.ticket-row').remove();
  }
});
</script>

<%- include('partials/footer') %>
<!-- End of file: views/edit-event.ejs -->
<!-- This file contains the form for editing an event, including ticket types and event details -->
<!-- It uses EJS templating to render existing event data and handle form submission -->
<!-- The script at the bottom allows dynamic addition/removal of ticket types -->
<!-- The form submits to the organiser's edit event route, which processes the changes -->
<!-- The page includes error handling to display validation messages if any -->
<!-- The layout is responsive and uses Tailwind CSS for styling -->
<!-- The header and footer partials are included for consistent layout across the site -->
<!-- The form is structured to allow easy editing of event details and ticket types -->
<!-- The JavaScript at the bottom handles adding new ticket types dynamically and removing existing ones -->
<!-- The form uses standard HTML5 validation for required fields and numeric inputs -->
<!-- The page is designed to be user-friendly for organisers managing their events -->